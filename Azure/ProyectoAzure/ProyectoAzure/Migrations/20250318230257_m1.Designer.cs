// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoAzure.Data;

#nullable disable

namespace ProyectoAzure.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20250318230257_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoAzure.Models.EventoTransaccion", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("int");

                    b.HasKey("EventoId");

                    b.HasIndex("TransaccionId");

                    b.ToTable("EventosTransaccion");

                    b.HasData(
                        new
                        {
                            EventoId = 1,
                            Descripcion = "La transacción fue procesada con éxito",
                            FechaEvento = new DateTime(2025, 3, 18, 23, 2, 56, 166, DateTimeKind.Utc).AddTicks(3967),
                            TipoEvento = "Transacción aprobada",
                            TransaccionId = 2
                        });
                });

            modelBuilder.Entity("ProyectoAzure.Models.Notificacion", b =>
                {
                    b.Property<int>("NotificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificacionId"));

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoNotificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("int");

                    b.HasKey("NotificacionId");

                    b.HasIndex("TransaccionId")
                        .IsUnique();

                    b.ToTable("Notificaciones");

                    b.HasData(
                        new
                        {
                            NotificacionId = 1,
                            EmailCliente = "cliente@example.com",
                            EstadoNotificacion = "Enviada",
                            FechaEnvio = new DateTime(2025, 3, 18, 23, 2, 56, 166, DateTimeKind.Utc).AddTicks(5485),
                            TransaccionId = 2
                        });
                });

            modelBuilder.Entity("ProyectoAzure.Models.Transaccion", b =>
                {
                    b.Property<int>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransaccionId"));

                    b.Property<string>("CuentaDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetallesAdicionales")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNotificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaProcesamiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoTransaccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransaccionId");

                    b.ToTable("Transacciones");

                    b.HasData(
                        new
                        {
                            TransaccionId = 1,
                            CuentaDestino = "1234567890123456",
                            DetallesAdicionales = "Compra en línea",
                            Estado = "Pendiente",
                            FechaCreacion = new DateTime(2025, 3, 18, 23, 2, 56, 165, DateTimeKind.Utc).AddTicks(7017),
                            Monto = 100.50m,
                            TipoTransaccion = "PagoConTarjeta"
                        },
                        new
                        {
                            TransaccionId = 2,
                            CuentaDestino = "9876543210123456",
                            DetallesAdicionales = "Pago de renta",
                            Estado = "Exitosa",
                            FechaCreacion = new DateTime(2025, 3, 18, 23, 2, 56, 165, DateTimeKind.Utc).AddTicks(7296),
                            FechaNotificacion = new DateTime(2025, 3, 18, 23, 2, 56, 165, DateTimeKind.Utc).AddTicks(7807),
                            FechaProcesamiento = new DateTime(2025, 3, 18, 23, 2, 56, 165, DateTimeKind.Utc).AddTicks(7297),
                            Monto = 500.00m,
                            TipoTransaccion = "TransferenciaBancaria"
                        });
                });

            modelBuilder.Entity("ProyectoAzure.Models.EventoTransaccion", b =>
                {
                    b.HasOne("ProyectoAzure.Models.Transaccion", "Transaccion")
                        .WithMany("Eventos")
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("ProyectoAzure.Models.Notificacion", b =>
                {
                    b.HasOne("ProyectoAzure.Models.Transaccion", "Transaccion")
                        .WithOne("Notificacion")
                        .HasForeignKey("ProyectoAzure.Models.Notificacion", "TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("ProyectoAzure.Models.Transaccion", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("Notificacion")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
