@model AzureServiceBus.Models.Transaccion

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
<h4>Transaccion</h4>
<hr />

<div class="row">
    <div class="col-md-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Monto" class="control-label"></label>
                <input asp-for="Monto" class="form-control" />
                <span asp-validation-for="Monto" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="TiposTransacciones" class="control-label"></label>
                <select asp-for="TiposTransacciones" class="form-control" asp-items="@(new SelectList(ViewBag.TiposTransacciones, "Value", "Text"))"></select>
                <span asp-validation-for="TiposTransacciones" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CuentaDestino" class="control-label"></label>
                <input asp-for="CuentaDestino" class="form-control" />
                <span asp-validation-for="CuentaDestino" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DetallesAdicionales" class="control-label"></label>
                <input asp-for="DetallesAdicionales" class="form-control" />
                <span asp-validation-for="DetallesAdicionales" class="text-danger"></span>
            </div>

            @* <div class="form-group">
                <label asp-for="Estado" class="control-label"></label>
                <select asp-for="Estado" class="form-control" asp-items="@(new SelectList(ViewBag.EstadosTransacciones, "Value", "Text"))"></select>
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div> *@

            <div class="form-group">
                <input type="submit" value="Lanzar Cola/Transaccion" class="btn btn-primary" />
            </div>
        </form>
    </div>

    @* <div class="col-md-6">
        <h4>Enviar Mensaje a la Cola</h4>
        <form asp-action="SendMessageToQueue" method="post">
            <div class="form-group">
                <label>Mensaje para la Cola</label>
                <input type="text" name="message" class="form-control" required />
            </div>
            <div class="form-group mt-2">
                <button type="submit" class="btn btn-success">Enviar a Cola</button>
            </div>
        </form>
        @if (TempData["QueueStatus"] != null)
        {
            <div class="alert alert-info mt-2">@TempData["QueueStatus"]</div>
        }
    </div> *@
</div>

<hr />

<div class="row">
    <div class="col-md-6">
        <h4>Recibir Mensaje de la Cola</h4>
        <button id="btnReceiveQueue" class="btn btn-warning">Recibir Mensaje de la Cola</button>
        <div id="queueMessage" class="mt-2"></div>
    </div>

    <div class="col-md-6">
        <h4>Enviar Mensaje a la Suscripción</h4>
        <form asp-action="SendMessageToSubscription" method="post">
            <div class="form-group">
                <label>Mensaje para la Suscripción</label>
                <input type="text" name="message" class="form-control" required />
            </div>
            <div class="form-group mt-2">
                <button type="submit" class="btn btn-success">Enviar a Suscripción</button>
            </div>
        </form>
        @if (TempData["SubscriptionStatus"] != null)
        {
            <div class="alert alert-info mt-2">@TempData["SubscriptionStatus"]</div>
        }
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-12">
        <h4>Recibir Mensaje de la Suscripción</h4>
        <button id="btnReceiveSubscription" class="btn btn-secondary">Recibir Mensaje de la Suscripción</button>
        <div id="subscriptionMessage" class="mt-2"></div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-outline-secondary">Volver a la lista</a>
</div>

@section Scripts {
    <script>
        document.getElementById("btnReceiveQueue").addEventListener("click", function () {
            fetch("/Transaccion/ReceiveMessagesFromQueue", { method: "POST" })
                .then(response => response.text())
                .then(data => {
                    document.getElementById("queueMessage").innerHTML = data;
                })
                .catch(error => {
                    console.error('Error al recibir mensaje de la cola:', error);
                });
        });

        document.getElementById("btnReceiveSubscription").addEventListener("click", function () {
            fetch("/Transaccion/ReceiveMessagesFromSubscription", { method: "POST" })
                .then(response => response.text())
                .then(data => {
                    document.getElementById("subscriptionMessage").innerHTML = data;
                })
                .catch(error => {
                    console.error('Error al recibir mensaje de la suscripción:', error);
                });
        });
    </script>
}
