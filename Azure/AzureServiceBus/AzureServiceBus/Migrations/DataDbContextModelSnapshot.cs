// <auto-generated />
using System;
using AzureServiceBus.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AzureServiceBus.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AzureServiceBus.Models.EventoTransaccion", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("datetime2");

                    b.Property<int>("TiposEventos")
                        .HasColumnType("int");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("int");

                    b.HasKey("EventoId");

                    b.HasIndex("TransaccionId");

                    b.ToTable("EventosTransacciones");
                });

            modelBuilder.Entity("AzureServiceBus.Models.Notificacion", b =>
                {
                    b.Property<int>("NotificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificacionId"));

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("int");

                    b.HasKey("NotificacionId");

                    b.HasIndex("TransaccionId")
                        .IsUnique();

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("AzureServiceBus.Models.Transaccion", b =>
                {
                    b.Property<int>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransaccionId"));

                    b.Property<string>("CuentaDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetallesAdicionales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNotificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaProcesamiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TiposTransacciones")
                        .HasColumnType("int");

                    b.HasKey("TransaccionId");

                    b.ToTable("Transacciones");

                    b.HasData(
                        new
                        {
                            TransaccionId = 1,
                            CuentaDestino = "1234-5678-9012-3456",
                            DetallesAdicionales = "Compra en tienda online",
                            Estado = 0,
                            FechaCreacion = new DateTime(2024, 3, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Monto = 100.50m,
                            TiposTransacciones = 0
                        },
                        new
                        {
                            TransaccionId = 2,
                            CuentaDestino = "ES9121000418450200051332",
                            DetallesAdicionales = "Pago de alquiler",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 15, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaProcesamiento = new DateTime(2024, 3, 15, 11, 5, 0, 0, DateTimeKind.Unspecified),
                            Monto = 250.75m,
                            TiposTransacciones = 1
                        },
                        new
                        {
                            TransaccionId = 3,
                            CuentaDestino = "9876-5432-1098-7654",
                            DetallesAdicionales = "Suscripción mensual",
                            Estado = 2,
                            FechaCreacion = new DateTime(2024, 3, 15, 12, 15, 0, 0, DateTimeKind.Unspecified),
                            FechaProcesamiento = new DateTime(2024, 3, 15, 12, 18, 0, 0, DateTimeKind.Unspecified),
                            Monto = 50.00m,
                            TiposTransacciones = 0
                        });
                });

            modelBuilder.Entity("AzureServiceBus.Models.EventoTransaccion", b =>
                {
                    b.HasOne("AzureServiceBus.Models.Transaccion", "Transaccion")
                        .WithMany("Eventos")
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("AzureServiceBus.Models.Notificacion", b =>
                {
                    b.HasOne("AzureServiceBus.Models.Transaccion", "Transaccion")
                        .WithOne("Notificacion")
                        .HasForeignKey("AzureServiceBus.Models.Notificacion", "TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("AzureServiceBus.Models.Transaccion", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("Notificacion");
                });
#pragma warning restore 612, 618
        }
    }
}
